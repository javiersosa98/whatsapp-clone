{"version":3,"sources":["firebase.js","StateProvider.js","Chat.js","SidebarChat.js","Sidebar.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Chat","useState","input","setInput","seed","setSeed","roomId","useParams","roomName","setRoomName","messages","setMessages","user","useEffect","onSnapshot","doc","snapshot","data","name","messagesCollection","query","collection","orderBy","docs","map","Math","floor","random","className","Avatar","src","length","Date","timestamp","toDate","toLocaleString","lastSeen","IconButton","message","displayName","onChange","e","target","placeholder","type","onClick","preventDefault","console","log","addDoc","serverTimestamp","SidebarChat","id","addNewChat","prompt","to","Sidebar","rooms","setRooms","photoURL","room","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3914adfe.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { doc , addDoc, onSnapshot, collection, query, orderBy } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAKzb4GJk19TdeP1ab5Ty0CZvlLDlkfWZQ\",\n    authDomain: \"whatsapp-clone-e29ba.firebaseapp.com\",\n    projectId: \"whatsapp-clone-e29ba\",\n    storageBucket: \"whatsapp-clone-e29ba.appspot.com\",\n    messagingSenderId: \"760851288080\",\n    appId: \"1:760851288080:web:cdaeba9214982b46ed3a95\",\n    measurementId: \"G-5TRXDZ4Q82\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst db = getFirestore(firebaseApp);\nconst auth = getAuth(firebaseApp);\nconst provider = new GoogleAuthProvider();\n\nexport { auth, provider, signInWithPopup, collection, onSnapshot, doc , addDoc, query, orderBy };\nexport default db;","import React, { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);","import React, { useEffect, useState } from 'react';\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport { useParams } from \"react-router-dom\";\nimport db from \"./firebase\";\nimport { doc, onSnapshot, collection, query, orderBy, addDoc } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport { serverTimestamp } from '@firebase/firestore'\nimport \"./Chat.css\";\n\n\nfunction Chat() {\n    const [input, setInput] = useState(\"\");\n    const [seed, setSeed] = useState(\"\");\n    const { roomId } = useParams();\n    const [roomName, setRoomName] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [{ user }, dispatch] = useStateValue();\n\n    useEffect(() => {\n\n        if (roomId) {\n            onSnapshot(doc(db, \"rooms\", `${roomId}`), (snapshot) => {\n                setRoomName(snapshot.data().name);\n            });\n\n            const messagesCollection = query(collection(db, \"rooms\", `${roomId}`, \"messages\"), orderBy(\"timestamp\", \"asc\"));\n            onSnapshot(messagesCollection, (snapshot) => {\n                setMessages(snapshot.docs.map((doc) => \n                    doc.data()\n                ))\n            });\n        }\n    }, [roomId]);\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, [roomId]);\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        console.log(\"You type >>> \", input);\n\n        addDoc(collection(db, \"rooms\", `${roomId}`, \"messages\"), {\n            message: input,\n            name: user.displayName,\n            timestamp: serverTimestamp()\n        });\n\n        setInput('');\n    };\n\n    const lastSeen = () => {\n\n        if (messages.length > 0) {\n            return new Date(messages[messages.length - 1]?.timestamp?.toDate()).toLocaleString();\n        } else {\n            return \"...\";\n        }\n    }\n\n    return (\n        <div className=\"chat\">\n            <div className=\"chat__header\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n                \n                <div className=\"chat__headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>Last seen {\" \"} {lastSeen()}</p>\n                </div>\n\n                <div className=\"chat__headerRight\">\n                    <IconButton>\n                        <SearchOutlined />\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n                </div>\n            </div>\n\n            <div className=\"chat__body\">\n                {messages.map((message) => (\n                    <p className={`chat__message ${message.name === user.displayName && \"chat__reciever\"}`}>\n                        <span className=\"chat__name\">{message.name}</span>\n                            {message.message}\n                        <span className=\"chat__timestamp\">{new Date(message.timestamp?.toDate()).toLocaleString()}</span>\n                    </p>\n                ))}\n                \n            </div>\n\n            <div className=\"chat__footer\">\n                <IconButton>\n                    <InsertEmoticonIcon />\n                </IconButton>\n                <form>\n                    <input value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\" />\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\n                </form>\n                <IconButton>\n                    <MicIcon />\n                </IconButton>\n            </div>\n        </div>\n    );\n}\n\nexport default Chat\n","import React, { useEffect, useState } from 'react';\nimport { Avatar } from \"@material-ui/core\";\nimport db from \"./firebase\";\nimport { onSnapshot, collection, query, orderBy, addDoc } from \"./firebase\";\nimport { Link } from \"react-router-dom\";\nimport './SidebarChat.css';\n\n\n\nfunction SidebarChat({ id, name, addNewChat }) {\n    const [seed, setSeed] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() =>{\n        if (id) {\n            const messagesCollection = query(collection(db, \"rooms\", `${id}`, \"messages\"), orderBy(\"timestamp\", \"desc\"));\n            onSnapshot(messagesCollection, (snapshot) => {\n                setMessages(snapshot.docs.map((doc) => \n                    doc.data()\n                ))\n            });\n        }\n    }, [id]);\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, []);\n\n    const createChat = () => {\n        const roomName = prompt(\"Please enter name for chat room\");\n\n        if (roomName) {\n            addDoc(collection(db, \"rooms\"), {\n                name: roomName\n            });\n        }\n    };\n\n    return !addNewChat ? (\n        <Link to={`/rooms/${id}`}>\n            <div className=\"sidebarChat\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n                <div className=\"sidebarChat__info\">\n                    <h2>{name}</h2>\n                    <p>{messages[0]?.message}</p>\n                </div>\n            </div>\n        </Link>\n        \n    ): (\n        <div onClick={createChat} className=\"sidebarChat\">\n            <h2>Add new chat</h2>\n        </div>\n    );\n}\n\nexport default SidebarChat\n","import React, { useState, useEffect } from 'react';\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\nimport SidebarChat from \"./SidebarChat\";\nimport db from \"./firebase\";\nimport { collection, onSnapshot } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport './Sidebar.css';\n\n\nfunction Sidebar() {\n    const [rooms, setRooms] = useState([]);\n    const [{ user }, dispatch] = useStateValue();\n\n    useEffect(() => {\n        onSnapshot(collection(db, \"rooms\"), (snapshot) => {\n            setRooms(snapshot.docs.map((doc) => \n                    ({\n                        id: doc.id,\n                        data: doc.data(),\n                    })\n                )\n            )\n        });\n    }, []);\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__header\">\n                <Avatar src={user?.photoURL} />\n                <div className=\"sidebar__headerRight\">\n                    <IconButton>\n                        <DonutLargeIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ChatIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>                    \n                </div>\n            </div>\n\n            <div className=\"sidebar__search\">\n                <div className=\"sidebar__searchContainer\">\n                    <SearchOutlined />\n                    <input placeholder=\"Search or start new chat\" type=\"text\" />\n                </div>\n            </div>\n\n            <div className=\"sidebar__chats\">\n                <SidebarChat addNewChat />\n                {rooms.map((room) => (\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Sidebar\n\n","export const initialState = {\n    user: null,\n};\n\nexport const actionTypes = {\n    SET_USER: \"SET_USER\",\n};\n\nconst reducer = (state, action) => {\n    console.log(action);\n    switch (action.type) {\n        case actionTypes.SET_USER:\n            return {\n                ...state,\n                user: action.user,\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport { Button } from \"@material-ui/core\";\nimport { auth, provider, signInWithPopup } from \"./firebase\";\nimport { actionTypes } from \"./reducer\";\nimport { useStateValue } from \"./StateProvider\"\nimport \"./Login.css\";\n\nfunction Login() {\n    const [{}, dispatch] = useStateValue();\n\n    const signIn = () => {\n        signInWithPopup(auth, provider)\n        .then((result) => {\n            dispatch({\n                type: actionTypes.SET_USER,\n                user: result.user,\n            })\n        })\n        .catch((error) => alert(error.message));\n    };\n\n    return (\n        <div className=\"login\">\n            <div className=\"login__container\">\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\" />\n\n                <div className=\"login__text\">\n                    <h1>Sign in to WhatsApp</h1>\n                </div>\n\n                <Button onClick={signIn}>Sign In With Google</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React from \"react\";\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Chat from \"./Chat\";\nimport Sidebar from \"./Sidebar\";\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\"\n\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app__body\"> \n          <Router>\n            <Sidebar />\n\n            <Switch>\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n              </Route>\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, { initialState } from './reducer';\nimport { StateProvider } from './StateProvider';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}