{"ast":null,"code":"var _jsxFileName = \"/home/javier.sosa/Escritorio/JS PROJECTS/whatsapp-clone/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport { useParams } from \"react-router-dom\";\nimport db from \"./firebase\";\nimport { doc, onSnapshot, collection, query, orderBy, addDoc } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport { serverTimestamp } from '@firebase/firestore';\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [seed, setSeed] = useState(\"\");\n  const {\n    roomId\n  } = useParams();\n  const [roomName, setRoomName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [{\n    user\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    if (roomId) {\n      onSnapshot(doc(db, \"rooms\", `${roomId}`), snapshot => {\n        setRoomName(snapshot.data().name);\n      });\n      const messagesCollection = query(collection(db, \"rooms\", `${roomId}`, \"messages\"), orderBy(\"timestamp\", \"asc\"));\n      onSnapshot(messagesCollection, snapshot => {\n        setMessages(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n  }, [roomId]);\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, [roomId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    console.log(\"You type >>> \", input);\n    addDoc(collection(db, \"rooms\", `${roomId}`, \"messages\"), {\n      message: input,\n      name: user.displayName,\n      timestamp: serverTimestamp()\n    });\n    setInput('');\n  };\n\n  const lastSeen = () => {\n    if (messages.timestamp == null) {\n      var _messages, _messages$timestamp;\n\n      return new Date((_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : (_messages$timestamp = _messages.timestamp) === null || _messages$timestamp === void 0 ? void 0 : _messages$timestamp.toDate()).toLocaleString();\n    } else {\n      return \"...\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: `https://avatars.dicebear.com/api/human/${seed}.svg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__headerInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last seen \", \" \", \" \", lastSeen()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__headerRight\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__body\",\n      children: messages.map(message => {\n        var _message$timestamp;\n\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `chat__message ${message.name === user.displayName && \"chat__reciever\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat__name\",\n            children: message.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), message.message, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat__timestamp\",\n            children: new Date((_message$timestamp = message.timestamp) === null || _message$timestamp === void 0 ? void 0 : _message$timestamp.toDate()).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__footer\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          type: \"submit\",\n          children: \"Send a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"hKS16KLQgnMMyaBgwqgjl2eD/Lo=\", false, function () {\n  return [useParams, useStateValue];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/javier.sosa/Escritorio/JS PROJECTS/whatsapp-clone/src/Chat.js"],"names":["React","useEffect","useState","Avatar","IconButton","MoreVertIcon","SearchOutlined","AttachFile","InsertEmoticonIcon","MicIcon","useParams","db","doc","onSnapshot","collection","query","orderBy","addDoc","useStateValue","serverTimestamp","Chat","input","setInput","seed","setSeed","roomId","roomName","setRoomName","messages","setMessages","user","dispatch","snapshot","data","name","messagesCollection","docs","map","Math","floor","random","sendMessage","e","preventDefault","console","log","message","displayName","timestamp","lastSeen","Date","length","toDate","toLocaleString","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport { useParams } from \"react-router-dom\";\nimport db from \"./firebase\";\nimport { doc, onSnapshot, collection, query, orderBy, addDoc } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport { serverTimestamp } from '@firebase/firestore'\nimport \"./Chat.css\";\n\n\nfunction Chat() {\n    const [input, setInput] = useState(\"\");\n    const [seed, setSeed] = useState(\"\");\n    const { roomId } = useParams();\n    const [roomName, setRoomName] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [{ user }, dispatch] = useStateValue();\n\n    useEffect(() => {\n\n        if (roomId) {\n            onSnapshot(doc(db, \"rooms\", `${roomId}`), (snapshot) => {\n                setRoomName(snapshot.data().name);\n            });\n\n            const messagesCollection = query(collection(db, \"rooms\", `${roomId}`, \"messages\"), orderBy(\"timestamp\", \"asc\"));\n            onSnapshot(messagesCollection, (snapshot) => {\n                setMessages(snapshot.docs.map((doc) => \n                    doc.data()\n                ))\n            });\n        }\n    }, [roomId]);\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, [roomId]);\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        console.log(\"You type >>> \", input);\n\n        addDoc(collection(db, \"rooms\", `${roomId}`, \"messages\"), {\n            message: input,\n            name: user.displayName,\n            timestamp: serverTimestamp()\n        });\n\n        setInput('');\n    };\n\n    const lastSeen = () => {\n\n        if (messages.timestamp == null) {\n            return new Date(messages[messages.length - 1]?.timestamp?.toDate()).toLocaleString();\n        } else {\n            return \"...\";\n        }\n    }\n\n    return (\n        <div className=\"chat\">\n            <div className=\"chat__header\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n                \n                <div className=\"chat__headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>Last seen {\" \"} {lastSeen()}</p>\n                </div>\n\n                <div className=\"chat__headerRight\">\n                    <IconButton>\n                        <SearchOutlined />\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n                </div>\n            </div>\n\n            <div className=\"chat__body\">\n                {messages.map((message) => (\n                    <p className={`chat__message ${message.name === user.displayName && \"chat__reciever\"}`}>\n                        <span className=\"chat__name\">{message.name}</span>\n                            {message.message}\n                        <span className=\"chat__timestamp\">{new Date(message.timestamp?.toDate()).toLocaleString()}</span>\n                    </p>\n                ))}\n                \n            </div>\n\n            <div className=\"chat__footer\">\n                <IconButton>\n                    <InsertEmoticonIcon />\n                </IconButton>\n                <form>\n                    <input value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\" />\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\n                </form>\n                <IconButton>\n                    <MicIcon />\n                </IconButton>\n            </div>\n        </div>\n    );\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}